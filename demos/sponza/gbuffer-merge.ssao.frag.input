#version 450

#extension GL_ARB_separate_shader_objects : enable

INCLUDE(../../data/glsl/lighting.glsl)

INCLUDE(../../data/glsl/util.glsl)

layout(push_constant) uniform pcb {
   mat4 Proj;
   float aspect_ratio;
   float tan_half_fov;
} PCB;

layout(location = 0) in vec2 in_uv;
layout(location = 1) in vec2 in_view_ray;

layout(std140, set = 0, binding = 0) uniform light_ubo
{
   Light sun;
} L;

struct ShadowMapData {
   mat4 light_viewproj;
   uint shadow_map_size;
   uint pfc_kernel_size;
};

layout(std140, set = 0, binding = 1) uniform ubo_shadow_map_data {
   ShadowMapData shadow_map_data;
} SMD;

layout(std140, set = 0, binding = 2) uniform ubo_light_eye_dir {
   vec4 eye_dir;
} LD;

layout(set = 1, binding = 0) uniform sampler2DShadow shadow_map;

layout(set = 2, binding = 0) uniform sampler2D tex_depth;
layout(set = 2, binding = 1) uniform sampler2D tex_eye_normal;
layout(set = 2, binding = 2) uniform sampler2D tex_light_space_position;
layout(set = 2, binding = 3) uniform sampler2D tex_diffuse;
layout(set = 2, binding = 4) uniform sampler2D tex_specular;
layout(set = 2, binding = 5) uniform sampler2D tex_ssao;

layout(location = 0) out vec4 out_color;

void main()
{
   float ambient_occlusion = texture(tex_ssao, in_uv).r;
   INCLUDE(compute_deferred_lighting.glsl)
}
